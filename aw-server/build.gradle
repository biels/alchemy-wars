buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile project(':aw-communication-lib')

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile("org.springframework.boot:spring-boot-devtools")
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile 'com.graphql-java:graphql-java-tools:3.2.0'
	compile 'com.graphql-java:graphql-spring-boot-starter:3.6.0'

	// to embed GraphiQL tool
	compile 'com.graphql-java:graphiql-spring-boot-starter:3.6.0'
}
buildDocker.doFirst {
	File stageDir = new File(project.buildDir, "docker")
	copy {
		from jar
		into "${stageDir}/target"
	}
}